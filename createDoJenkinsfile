node {
    env.TF_LOG=1
    stage('Clean WS'){
        
        cleanWs()
    }
    stage('Pull Source Code') { 

       git branch: 'feature/manage_kubernetes', credentialsId: 'github-cred', url: 'git@github.com:dirtydriver/thesis-terraform.git'
   
    }
    stage('Terraform Init'){
        withCredentials([string(credentialsId: 'digitalocean-token', variable: 'TF_VAR_do_token'),[$class: 'UsernamePasswordMultiBinding', credentialsId:'nexus', usernameVariable: 'ARTIFACTORY_USERNAME', passwordVariable: 'ARTIFACTORY_PASSWORD']]
        ) {
            docker.image('hashicorp/terraform:1.2.9').inside("""--entrypoint=''""") {
                
                sh'terraform init'
                
        }        }
        
    }
    stage('Terraform Plan'){
        withCredentials([string(credentialsId: 'digitalocean-token', variable: 'TF_VAR_do_token'),[$class: 'UsernamePasswordMultiBinding', credentialsId:'nexus', usernameVariable: 'ARTIFACTORY_USERNAME', passwordVariable: 'ARTIFACTORY_PASSWORD']]) {
            docker.image('hashicorp/terraform:1.2.9').inside("""--entrypoint=''""") {
                
                sh'terraform plan'
                
        }        }
        
    }
    stage('Terraform Apply Plan'){
        withCredentials([string(credentialsId: 'digitalocean-token', variable: 'TF_VAR_do_token'),[$class: 'UsernamePasswordMultiBinding', credentialsId:'nexus', usernameVariable: 'ARTIFACTORY_USERNAME', passwordVariable: 'ARTIFACTORY_PASSWORD']]) {
            docker.image('hashicorp/terraform:1.2.9').inside("""--entrypoint=''""") {
                
                sh'terraform apply -auto-approve'
                sh 'terraform output cluster-id > cluster-id'
        }        }
        
    }
    stage('Create & Upload kube config'){
        
         withCredentials([string(credentialsId: 'digitalocean-token', variable: 'TF_VAR_do_token')]) {

                sh'./get_config.sh'
                
        }
        
         withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId:'nexus',
  usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]){
      
      sh """curl -u $USERNAME:$PASSWORD --upload-file config https://nexus.petruska.dev/repository/raw_files/kube_config/config"""
      sh "rm -f config"
      
  }
    }
    }            
